; Engine configuration file.
; It's best edited using the editor UI and not directly,
; since the parameters that go here are not all obvious.
;
; Format:
;   [section] ; section goes between []
;   param=value ; assign values to parameters

config_version=4

_global_script_classes=[ {
"base": "Reference",
"class": "GPLReader",
"language": "GDScript",
"path": "res://addons/voxel-core/classes/readers/gpl.gd"
}, {
"base": "Reference",
"class": "ImageReader",
"language": "GDScript",
"path": "res://addons/voxel-core/classes/readers/image.gd"
}, {
"base": "Node",
"class": "Inventory",
"language": "GDScript",
"path": "res://Scripts/Inventory.gd"
}, {
"base": "Resource",
"class": "Item",
"language": "GDScript",
"path": "res://Items/Item.gd"
}, {
"base": "KinematicBody",
"class": "Player",
"language": "GDScript",
"path": "res://Scenes/Player/Player.gd"
}, {
"base": "Reference",
"class": "Reader",
"language": "GDScript",
"path": "res://addons/voxel-core/classes/reader.gd"
}, {
"base": "StaticBody",
"class": "Tile",
"language": "GDScript",
"path": "res://Scenes/Tiles/Tile.gd"
}, {
"base": "Reference",
"class": "VoxReader",
"language": "GDScript",
"path": "res://addons/voxel-core/classes/readers/vox.gd"
}, {
"base": "Object",
"class": "Voxel",
"language": "GDScript",
"path": "res://addons/voxel-core/classes/voxel.gd"
}, {
"base": "MeshInstance",
"class": "VoxelMesh",
"language": "GDScript",
"path": "res://addons/voxel-core/classes/voxel_mesh.gd"
}, {
"base": "Resource",
"class": "VoxelSet",
"language": "GDScript",
"path": "res://addons/voxel-core/classes/voxel_set.gd"
}, {
"base": "Reference",
"class": "VoxelTool",
"language": "GDScript",
"path": "res://addons/voxel-core/classes/voxel_tool.gd"
} ]
_global_script_class_icons={
"GPLReader": "",
"ImageReader": "res://addons/voxel-core/assets/logos/MagicaVoxel.png",
"Inventory": "",
"Item": "",
"Player": "",
"Reader": "",
"Tile": "",
"VoxReader": "res://addons/voxel-core/assets/logos/MagicaVoxel.png",
"Voxel": "res://addons/voxel-core/assets/classes/voxel.png",
"VoxelMesh": "res://addons/voxel-core/assets/classes/voxel_mesh.png",
"VoxelSet": "res://addons/voxel-core/assets/classes/voxel_set.png",
"VoxelTool": ""
}

[application]

config/name="seeweed"
run/main_scene="res://Scenes/World/World.tscn"
boot_splash/image="res://logo.png"
boot_splash/fullsize=false
boot_splash/bg_color=Color( 0.25098, 0.756863, 0.0862745, 1 )
config/icon="res://icon.png"

[display]

window/vsync/use_vsync=false
window/stretch/mode="2d"
window/stretch/aspect="expand"

[editor_plugins]

enabled=PoolStringArray( "res://addons/voxel-core/plugin.cfg" )

[importer_defaults]

VoxelCore.MeshOfVoxels={
"center": 2,
"mesh_mode": 1
}

[input]

move_forward={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":87,"unicode":0,"echo":false,"script":null)
 ]
}
move_left={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":65,"unicode":0,"echo":false,"script":null)
 ]
}
move_back={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":83,"unicode":0,"echo":false,"script":null)
 ]
}
move_right={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":68,"unicode":0,"echo":false,"script":null)
 ]
}
hotbar_next={
"deadzone": 0.5,
"events": [ Object(InputEventMouseButton,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"button_mask":0,"position":Vector2( 0, 0 ),"global_position":Vector2( 0, 0 ),"factor":1.0,"button_index":5,"pressed":false,"doubleclick":false,"script":null)
, Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":16777233,"unicode":0,"echo":false,"script":null)
 ]
}
hotbar_prev={
"deadzone": 0.5,
"events": [ Object(InputEventMouseButton,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"button_mask":0,"position":Vector2( 0, 0 ),"global_position":Vector2( 0, 0 ),"factor":1.0,"button_index":4,"pressed":false,"doubleclick":false,"script":null)
, Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":16777231,"unicode":0,"echo":false,"script":null)
 ]
}

[physics]

common/enable_pause_aware_picking=true
3d/physics_engine="GodotPhysics"

[rendering]

quality/shadows/filter_mode=2
quality/filters/msaa=2
